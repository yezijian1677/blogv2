<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cur.pro.mapper.KindMapper" >
  <resultMap id="BaseResultMap" type="cur.pro.entity.Kind" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from kind
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from kind
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cur.pro.entity.Kind" >
    insert into kind (id, name)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cur.pro.entity.Kind" >
    insert into kind
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cur.pro.entity.Kind" >
    update kind
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cur.pro.entity.Kind" >
    update kind
    set name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultType="cur.pro.entity.Kind">
    select
    <include refid="Base_Column_List"/>
    from kind;
  </select>

  <select id="selectByIds" parameterType="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from kind
    <where>
      id in
      <foreach collection="ids" item="id" separator="," open="(" close=")">
        #{id}
      </foreach>
    </where>
  </select>

  <select id="selectByName" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from kind
    where `name` = #{name, jdbcType=VARCHAR}
  </select>

  <select id="selectIdByLikeName" parameterType="string" resultType="Integer">
    select id from kind where `name` like concat('%', #{info, jdbcType=VARCHAR}, '%')
  </select>
</mapper>